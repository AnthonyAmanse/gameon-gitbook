http://plantuml.com/plantuml

http://plantuml.com/plantuml/uml/lLPDRzim3BtxLn2vR2kyxXuq1OO2tWOiNU0STbPa9jRYI8Qa9ZEA_VTHYYr_nCcQ5fWFDcnIvEFZe-IIQIkuA9cqy508f0Spi8ZAplV973F1hD8JPvltRQbIEtZqbhHlIOGs5fpTMvCqYcQp9WbNKYAt1cQpA5h0ntkOJvkFy1DNIyMtQ2F6hTWpYvJLENalZIohukVRszi_qTn_N4oXB5Y5EhuxFhzbz_6phKgSmkIN4jBXciH-XLGKJUrHkr1DOR0MCZDWcTwW1KsGNn7vk2AzM4OQfKqPZ6_h8Zoa0jSs0he2fa2HLM3O7ZCFBFPEOkrVW3Fvpi8A7Iaynoo6fU1RJxhtEuYYeEBe9cI4CWENoo6jYnk0q6AJsoayA6cPa8R2kw2qTgs0hTIJ1PlZaH_Noy-caZpNIgedCsqwIsWzDDTO1w7jcqD_v-wUH9_L5zpmTiuXyDDjcD87fgbdEpI6RJ2afMi4crSfkTGO6smTCVZt7lyQEOez6i0zhJ6mrXH3DyowYn6X0OZDbI4OEQC9AikYSkc8hU1yr0-yRtG4bEBcWpU7nlYte91QUJT1S9o2Js8OCBVeUWRRCCg8VdrTb-9rrtYdKsANFvQddJRAzB1Sf7cd7CTELpL3n5kxTVJvEP7B5wMoLOLZgWa4yC8rfXr6PyomCvAzqjk9Q3ydTRQlM1HgB5S8bXoZ9IzWlr2SMQ7aInjmPbc_9TArv20ipprWyyyff4t6aWeeyAUDedty14oINhDcMFZt6csl4cZqzrlOAwiVRBcl4jU1fWYTlzyKX857fMr-JcZNmkcpTa6V7GacwPiJjiTENv1lZtmo4oCdsCbSdfsK_piOpS-6sm5CGn3vq5X0rFvH37U8bjA1OUmaoeG99tLxHFGscCxB_2y0

@startuml
participant Client as P
participant "Mediator" as M
participant "Room N" as R
participant "First Room" as FR

== Client connects ==

P -> M: connect WebSocket
activate M
P ->> M: ready,{...}
M ->> P: player,<playerId>,{type: "joinpart",...}
note over M: Mediator finds target room
M ->> P: player,<playerId>,{type: "joinpart",...}
M ->> R: connect WebSocket
activate R
R ->> M: ack,{...}
note left
    Mediator connects to saved room,
    if room can't be reached, Sick Room
    will fill in
end note
M -->> P: ack,{...}
note right: Contains cached info about the room

== Asynchronous: Client to room ==

    P ->> M: room,<roomId>,{...}
    M ->> R: room,<roomId>,{...}
    note left: Mediator forwards message to room

== Asynchronous: Room to Client ==

    note over M
        Mediator receives events from room
        and forwards those that apply to the
        player (playerId or *)
    end note

    R ->> M: player,*,{type: "chat", ...}
    M ->> P: player,*,{...}
    R ->> M: player,<playerId>,{type: "event", ...}
    M ->> P: player,<playerId>,{...}

== Asynchronous: SOS ==

    P ->> M: sos,*,{...}
    note over M
        Mediator moves the player to First Room
    end note
    M ->> R: roomGoodbye,<roomId>,{...}
    R ->> M: close WebSocket
    deactivate R
    M ->> P: ack,{...}
    M ->> FR: roomHello,<roomId>,{...}
    activate FR
    FR ->> M: player,<playerId>,{type: "location", ...}
    M ->> P: player,<playerId>,{type: "location", ...}

== Asynchronons: Switch rooms ==

    P ->> M: room,<roomId>,{content: "/go N", ...}
    M ->> FR: room,<roomId>,{content: "/go N", ...}
    FR ->> M: playerLocation,<playerId>,{ type: "exit", ...}
    M ->> P: player,<playerId>,{type: "joinpart",...}
    note over M
        Mediator moves the player to whatever Room is North
    end note
    M ->> P: player,<playerId>,{type: "joinpart",...}
    M ->> FR: roomGoodbye,<roomId>,{...}
    deactivate FR
    M ->> P: player,<playerId>,{type: "joinpart",...}
    M ->> R: connect
    activate R
    M ->> P: player,<playerId>,{type: "joinpart",...}
    M ->> P: ack,{...}
    R ->> M: ack,{...}
    M ->> R: roomHello,<roomId>,{...}
    R ->> M: player,<playerId>,{type: "location", ...}
    M ->> P: player,<playerId>,{type: "location", ...}

== Client closes connection ==

P ->> M: close WebSocket
M ->> R: close WebSocket
note left: Mediator disconnects from room
deactivate R
deactivate M
@enduml
